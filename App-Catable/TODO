* Implement a list of recent blog posts.

* Root directory ( http://localhost.localdomain:3000/ ) should contain a 
newswire of recent blogs and posts.

* Style the "add new post" form better.

* Style the "/create-blog/" form better.

* http://localhost.localdomain:3000/blog should not mirror the front page.

* Comments:
    - add nested comments.
    - add reply to comments.

* Add OpenID-based authentication.
    - Added partially.
    - store the users inside the database.
    - add cookies/persistence.

* Add normal usernam/password authentication
    - With an email hand-shake
    - Allow to associate an OpenID URL with the account. (proposed by
    SubStack)

* Add support for tagging blog posts with tags (a.k.a "labels" or "keywords").
    - done partially.
    - Add support for more complex queries than just a single tag.
    - Write more extensive tests.

* Make sure each post displays the tags on the post page.

* Add custom authentication (with a login form).

* Add support for WordPress-based themes/styles/skins.
    - May not be feasable because WP themes contain XHTML and PHP code.
        - There may be some more-or-less standard template that these
        themes are using, still.

* Implement several blogs in one application.

* Implement a base table/class for post and comments.

* Implement JavaScript/AJAX goodness:
    - AJAX previews.
    - LiveJournal-like DHTML replies.

* Add more archive list view types

{{{
<SubStack>	catable should have a "draft" or "hidden" mode
where you can write an article that won't show up in the main page but you can
link to it directly
<SubStack>	so you can link people to drafts of your blog
entries to request comments before posting them for real
}}}

* Add SEO-friendly URLs to posts based on the title instead of just the ID.
like {{ /post/show/my-cat-purred-at-me-today/ }} .

* Add a breadcrumbs trail to the top of the page.

* Add RSS/Atom feeds.

* Add an option for posts and comments with rel="nofollow".

* Add an ability to review posts.
    * Sample Workflow:
        * Sophie writes a post and before publishing it, she inputs it into
        Catable, where it resides in a non-publically visible location.
        * She allows Jane and Jack to view the post, and copy-edit it.
        * When she's happy with the post, she makes it public.

* Add livejournal.com-like "Friends-only" posts and private posts.

* Add a plugin to syndicate articles on social bookmarking sites:
    - Addtoany button.
    - AddThis
    - ShareThis
    - individual blogging buttons (see the WordPress plugin).

* Add nested comments (comments to comments (to comments... and so forth)).

